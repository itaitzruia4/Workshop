import React, { Component } from 'react';

type Discount = CompositeDiscount | ConcreteDiscount;
type CompositeDiscount = AndDiscount | OrDiscount | XorDiscount;
type AndDiscount = { tag: "AndDiscount", left: Discount, right: Discount };
type OrDiscount = { tag: "OrDiscount", left: Discount, right: Discount };
type XorDiscount = { tag: "XorDiscount", left: Discount, right: Discount, discountTerm: DiscountTerm };
type ConcreteDiscount = SimpleDiscount | ConditionalDiscount;
type SimpleDiscount = { tag: "SimpleDiscount", priceAction: PriceAction };
type ConditionalDiscount = { tag: "ConditionalDiscount", priceAction: PriceAction, discountTerm: DiscountTerm };
type PriceAction = PriceActionComposite | PriceActionSimple;
type PriceActionComposite = {tag: "PriceActionComposite", value: "sum" | "max", left: PriceAction, right: PriceAction};
type PriceActionSimple = ProductPriceActionSimple | CategoryPriceActionSimple;
type ProductPriceActionSimple = { tag: "ProductPriceActionSimple", percentage: Number, key: Number };
type CategoryPriceActionSimple = { tag: "CategoryPriceActionSimple", percentage: Number, key: string};
type DiscountTerm = DiscountCompositeTerm | DiscountSimpleTerm;
type DiscountCompositeTerm = { tag: "DiscountCompositeTerm", value: "and" | "or" | "xor", left: DiscountTerm, right: DiscountTerm };
type DiscountSimpleTerm = ProductDiscountSimpleTerm | CategoryDiscountSimpleTerm | BagDiscountSimpleTerm;
type ProductDiscountSimpleTerm = { tag: "ProductDiscountSimpleTerm", action: "<" | ">" | "=" | ">=" | "<=", value: Number, key: Number };
type CategoryDiscountSimpleTerm = { tag: "CategoryDiscountSimpleTerm", action: "<" | ">" | "=" | ">=" | "<=", value: Number, key: string };
type BagDiscountSimpleTerm = { tag: "BagDiscountSimpleTerm", action: "<" | ">" | "=" | ">=" | "<=", value: Number};
